name: Build Screenshot Tool

on:
  push:
    branches: [ main, installer-setup ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: npm run build:win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ELECTRON_BUILDER_CACHE: false
      
    - name: Build for macOS
      if: matrix.os == 'macos-latest'
      run: npm run build:mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CSC_IDENTITY_AUTO_DISCOVERY: false
        ELECTRON_BUILDER_CACHE: false
      
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: |
          dist/*.exe
          dist/*.exe.blockmap
          dist/latest.yml
        retention-days: 30
        
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-installer
        path: |
          dist/*.dmg
          dist/*.dmg.blockmap
          dist/latest-mac.yml
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-installer
        path: ./artifacts/windows/
      continue-on-error: true
        
    - name: Download macOS artifacts  
      uses: actions/download-artifact@v4
      with:
        name: macos-installer
        path: ./artifacts/macos/
      continue-on-error: true
      
    - name: List downloaded artifacts
      run: |
        echo "Windows artifacts:"
        ls -la ./artifacts/windows/ || echo "No Windows artifacts found"
        echo "macOS artifacts:"
        ls -la ./artifacts/macos/ || echo "No macOS artifacts found"
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.run_number }}
        name: Screenshot Tool v${{ github.run_number }}
        body: |
          ## Screenshot Tool Release v${{ github.run_number }}
          
          ### Downloads
          - **Windows**: `Screenshot Tool Setup 1.0.0.exe`
          - **macOS**: `Screenshot Tool-1.0.0.dmg`
          
          ### Features
          - Fast screenshot capture with Ctrl+Shift+S
          - Area selection with real-time preview
          - Automatic clipboard copy
          - Save to custom locations
          - Claude Code integration (local file paths)
          - Completely offline operation
          
          ### Installation
          - **Windows**: Download and run the `.exe` installer
          - **macOS**: Download, open the `.dmg`, and drag to Applications
          
          Built with Electron and completely offline for privacy.
        files: |
          ./artifacts/windows/*
          ./artifacts/macos/*
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}